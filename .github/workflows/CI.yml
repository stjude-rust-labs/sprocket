name: Rust CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Update Rust
        run: rustup update nightly && rustup default nightly
      - name: Install rustfmt
        run: rustup component add rustfmt
      - run: cargo --locked fmt -- --check

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Update Rust
        run: rustup update stable && rustup default stable
      - name: Install clippy
        run: rustup component add clippy
      - run: cargo --locked clippy --all-features -- --deny warnings

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Update Rust
        run: rustup update stable && rustup default stable
      - name: Setup Docker (Mac)
        if: ${{'macos-latest' == matrix.os}}
        run: |
          brew update
          brew install docker
          brew install qemu
          brew install colima
          brew install lima-additional-guestagents
          # M1 and M2 Macs that the Github Actions supplies don't support nested virtualization. This forces x86 emulation to get around this
          #--mount /private is necessary here in order to give docker access to mac's temp directory for tests
          colima start --mount /private --memory 4 --network-address --arch x86_64
          echo "DOCKER_HOST=unix:///Users/runner/.colima/docker.sock" >> $GITHUB_ENV
      - name: Setup WSL (Windows)
        if: ${{'windows-latest' == matrix.os}}
        uses: Vampire/setup-wsl@v5
      - name: Install Podman (Windows)
        if: ${{'windows-latest' == matrix.os}}
        run: |
          curl -L --url "https://github.com/containers/podman/releases/download/v5.5.1/podman-5.5.1-setup.exe" -o Podman.exe
          Start-Process Podman.exe -Wait -ArgumentList "/norestart /passive" -Verb runAs;
          Add-Content $env:GITHUB_PATH "C:\Program Files\RedHat\Podman\"
      - name: Startup Docker (Windows)
        if: ${{'windows-latest' == matrix.os}}
        run: |
          podman machine init
          podman machine set --rootful
          podman machine start
          Add-Content $env:GITHUB_ENV "DOCKER_HOST=npipe:////./pipe/podman-machine-default"
      - name: Run tests
        run: cargo test --all-features
      - name: OK what changed
        run: git diff

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Update Rust
        run: rustup update stable && rustup default stable
      - run: cargo --locked doc
