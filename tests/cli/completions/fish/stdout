# Print an optspec for argparse to handle cmd's options that are independent of any subcommand.
function __fish_sprocket_global_optspecs
	string join \n v/verbose q/quiet c/config= s/skip-config-search h/help V/version
end

function __fish_sprocket_needs_command
	# Figure out if the current invocation already has a command.
	set -l cmd (commandline -opc)
	set -e cmd[1]
	argparse -s (__fish_sprocket_global_optspecs) -- $cmd 2>/dev/null
	or return
	if set -q argv[1]
		# Also print the command, so this can be used to figure out what it is.
		echo $argv[1]
		return 1
	end
	return 0
end

function __fish_sprocket_using_subcommand
	set -l cmd (__fish_sprocket_needs_command)
	test -z "$cmd"
	and return 1
	contains -- $cmd[1] $argv
end

complete -c sprocket -n "__fish_sprocket_needs_command" -s c -l config -d 'Path to the configuration file' -r -F
complete -c sprocket -n "__fish_sprocket_needs_command" -s v -l verbose -d 'Increase logging verbosity'
complete -c sprocket -n "__fish_sprocket_needs_command" -s q -l quiet -d 'Decrease logging verbosity'
complete -c sprocket -n "__fish_sprocket_needs_command" -s s -l skip-config-search -d 'Skip searching for and loading configuration files'
complete -c sprocket -n "__fish_sprocket_needs_command" -s h -l help -d 'Print help (see more with \'--help\')'
complete -c sprocket -n "__fish_sprocket_needs_command" -s V -l version -d 'Print version'
complete -c sprocket -n "__fish_sprocket_needs_command" -f -a "analyzer" -d 'Runs the Language Server Protocol (LSP) server'
complete -c sprocket -n "__fish_sprocket_needs_command" -f -a "check" -d 'Checks a document or a directory containing documents'
complete -c sprocket -n "__fish_sprocket_needs_command" -f -a "completions" -d 'Generates shell completions'
complete -c sprocket -n "__fish_sprocket_needs_command" -f -a "config" -d 'Display the effective configuration'
complete -c sprocket -n "__fish_sprocket_needs_command" -f -a "explain" -d 'Explains linting and validation rules'
complete -c sprocket -n "__fish_sprocket_needs_command" -f -a "format" -d 'Formats a document or a directory containing documents'
complete -c sprocket -n "__fish_sprocket_needs_command" -f -a "inputs" -d 'Writes the inputs schema for a WDL document'
complete -c sprocket -n "__fish_sprocket_needs_command" -f -a "lint" -d 'Lints a document or a directory containing documents'
complete -c sprocket -n "__fish_sprocket_needs_command" -f -a "run" -d 'Runs a task or workflow'
complete -c sprocket -n "__fish_sprocket_needs_command" -f -a "validate" -d 'Validate a set of inputs against a task or workflow'
complete -c sprocket -n "__fish_sprocket_needs_command" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
complete -c sprocket -n "__fish_sprocket_using_subcommand analyzer" -l stdio -d 'Use stdin and stdout for the RPC transport'
complete -c sprocket -n "__fish_sprocket_using_subcommand analyzer" -l lint -d 'Whether or not to enable all lint rules'
complete -c sprocket -n "__fish_sprocket_using_subcommand analyzer" -s v -l verbose -d 'Increase logging verbosity'
complete -c sprocket -n "__fish_sprocket_using_subcommand analyzer" -s q -l quiet -d 'Decrease logging verbosity'
complete -c sprocket -n "__fish_sprocket_using_subcommand analyzer" -s h -l help -d 'Print help'
complete -c sprocket -n "__fish_sprocket_using_subcommand analyzer" -s V -l version -d 'Print version'
complete -c sprocket -n "__fish_sprocket_using_subcommand check" -s e -l except -d 'Excepts (ignores) an analysis or lint rule' -r -f -a "CallInputSpacing\t''
CommandSectionIndentation\t''
CommentWhitespace\t''
ConciseInput\t''
ConsistentNewlines\t''
ContainerUri\t''
DeclarationName\t''
DeprecatedObject\t''
DeprecatedPlaceholder\t''
DoubleQuotes\t''
ElementSpacing\t''
EndingNewline\t''
ExpectedRuntimeKeys\t''
ExpressionSpacing\t''
HereDocCommands\t''
ImportPlacement\t''
ImportSorted\t''
ImportWhitespace\t''
InputName\t''
InputSorted\t''
KnownRules\t''
LineWidth\t''
LintDirectiveFormatted\t''
LintDirectiveValid\t''
MatchingOutputMeta\t''
MetaDescription\t''
MetaKeyValueFormatting\t''
MetaSections\t''
OutputName\t''
OutputSection\t''
ParameterMetaMatched\t''
PascalCase\t''
PreambleCommentPlacement\t''
PreambleFormatted\t''
RedundantNone\t''
RequirementsSection\t''
RuntimeSection\t''
SectionOrdering\t''
ShellCheck\t''
SnakeCase\t''
TodoComment\t''
TrailingComma\t''
UnnecessaryFunctionCall\t''
UnusedCall\t''
UnusedDeclaration\t''
UnusedImport\t''
UnusedInput\t''
VersionStatementFormatted\t''
Whitespace\t''"
complete -c sprocket -n "__fish_sprocket_using_subcommand check" -s m -l report-mode -d 'The report mode' -r -f -a "full\t'Prints diagnostics as multiple lines'
one-line\t'Prints diagnostics as one line'"
complete -c sprocket -n "__fish_sprocket_using_subcommand check" -l deny-warnings -d 'Causes the command to fail if warnings were reported'
complete -c sprocket -n "__fish_sprocket_using_subcommand check" -l deny-notes -d 'Causes the command to fail if notes were reported'
complete -c sprocket -n "__fish_sprocket_using_subcommand check" -l suppress-imports -d 'Suppress diagnostics from documents that were not explicitly provided in the sources list (i.e., were imported from a provided source)'
complete -c sprocket -n "__fish_sprocket_using_subcommand check" -l show-remote-diagnostics -d 'Show diagnostics for remote documents'
complete -c sprocket -n "__fish_sprocket_using_subcommand check" -l hide-notes -d 'Hide diagnostics with `note` severity'
complete -c sprocket -n "__fish_sprocket_using_subcommand check" -l no-color -d 'Disables color output'
complete -c sprocket -n "__fish_sprocket_using_subcommand check" -s l -l lint -d 'Enable lint checks in addition to validation errors'
complete -c sprocket -n "__fish_sprocket_using_subcommand check" -s v -l verbose -d 'Increase logging verbosity'
complete -c sprocket -n "__fish_sprocket_using_subcommand check" -s q -l quiet -d 'Decrease logging verbosity'
complete -c sprocket -n "__fish_sprocket_using_subcommand check" -s h -l help -d 'Print help (see more with \'--help\')'
complete -c sprocket -n "__fish_sprocket_using_subcommand check" -s V -l version -d 'Print version'
complete -c sprocket -n "__fish_sprocket_using_subcommand completions" -s v -l verbose -d 'Increase logging verbosity'
complete -c sprocket -n "__fish_sprocket_using_subcommand completions" -s q -l quiet -d 'Decrease logging verbosity'
complete -c sprocket -n "__fish_sprocket_using_subcommand completions" -s h -l help -d 'Print help'
complete -c sprocket -n "__fish_sprocket_using_subcommand completions" -s V -l version -d 'Print version'
complete -c sprocket -n "__fish_sprocket_using_subcommand config; and not __fish_seen_subcommand_from init resolve help" -s v -l verbose -d 'Increase logging verbosity'
complete -c sprocket -n "__fish_sprocket_using_subcommand config; and not __fish_seen_subcommand_from init resolve help" -s q -l quiet -d 'Decrease logging verbosity'
complete -c sprocket -n "__fish_sprocket_using_subcommand config; and not __fish_seen_subcommand_from init resolve help" -s h -l help -d 'Print help'
complete -c sprocket -n "__fish_sprocket_using_subcommand config; and not __fish_seen_subcommand_from init resolve help" -s V -l version -d 'Print version'
complete -c sprocket -n "__fish_sprocket_using_subcommand config; and not __fish_seen_subcommand_from init resolve help" -f -a "init" -d 'Generates a default configuration file'
complete -c sprocket -n "__fish_sprocket_using_subcommand config; and not __fish_seen_subcommand_from init resolve help" -f -a "resolve" -d 'Displays the current configuration'
complete -c sprocket -n "__fish_sprocket_using_subcommand config; and not __fish_seen_subcommand_from init resolve help" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
complete -c sprocket -n "__fish_sprocket_using_subcommand config; and __fish_seen_subcommand_from init" -s v -l verbose -d 'Increase logging verbosity'
complete -c sprocket -n "__fish_sprocket_using_subcommand config; and __fish_seen_subcommand_from init" -s q -l quiet -d 'Decrease logging verbosity'
complete -c sprocket -n "__fish_sprocket_using_subcommand config; and __fish_seen_subcommand_from init" -s h -l help -d 'Print help'
complete -c sprocket -n "__fish_sprocket_using_subcommand config; and __fish_seen_subcommand_from init" -s V -l version -d 'Print version'
complete -c sprocket -n "__fish_sprocket_using_subcommand config; and __fish_seen_subcommand_from resolve" -s v -l verbose -d 'Increase logging verbosity'
complete -c sprocket -n "__fish_sprocket_using_subcommand config; and __fish_seen_subcommand_from resolve" -s q -l quiet -d 'Decrease logging verbosity'
complete -c sprocket -n "__fish_sprocket_using_subcommand config; and __fish_seen_subcommand_from resolve" -s h -l help -d 'Print help'
complete -c sprocket -n "__fish_sprocket_using_subcommand config; and __fish_seen_subcommand_from resolve" -s V -l version -d 'Print version'
complete -c sprocket -n "__fish_sprocket_using_subcommand config; and __fish_seen_subcommand_from help" -f -a "init" -d 'Generates a default configuration file'
complete -c sprocket -n "__fish_sprocket_using_subcommand config; and __fish_seen_subcommand_from help" -f -a "resolve" -d 'Displays the current configuration'
complete -c sprocket -n "__fish_sprocket_using_subcommand config; and __fish_seen_subcommand_from help" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
complete -c sprocket -n "__fish_sprocket_using_subcommand explain" -s t -l tag -d 'List all rules with the given tag' -r -f -a "Clarity\t''
Completeness\t''
Correctness\t''
Deprecated\t''
Naming\t''
Portability\t''
Sorting\t''
Spacing\t''
Style\t''"
complete -c sprocket -n "__fish_sprocket_using_subcommand explain" -l definitions -d 'Display general WDL definitions'
complete -c sprocket -n "__fish_sprocket_using_subcommand explain" -l list-all-rules -d 'Lists all rules and exits'
complete -c sprocket -n "__fish_sprocket_using_subcommand explain" -l list-all-tags -d 'Lists all tags and exits'
complete -c sprocket -n "__fish_sprocket_using_subcommand explain" -s v -l verbose -d 'Increase logging verbosity'
complete -c sprocket -n "__fish_sprocket_using_subcommand explain" -s q -l quiet -d 'Decrease logging verbosity'
complete -c sprocket -n "__fish_sprocket_using_subcommand explain" -s h -l help -d 'Print help'
complete -c sprocket -n "__fish_sprocket_using_subcommand explain" -s V -l version -d 'Print version'
complete -c sprocket -n "__fish_sprocket_using_subcommand format" -s m -l report-mode -d 'The report mode' -r -f -a "full\t'Prints diagnostics as multiple lines'
one-line\t'Prints diagnostics as one line'"
complete -c sprocket -n "__fish_sprocket_using_subcommand format" -l indentation-size -d 'The number of spaces to use for indentation levels (default is 4)' -r
complete -c sprocket -n "__fish_sprocket_using_subcommand format" -l max-line-length -d 'The maximum line length (default is 90)' -r
complete -c sprocket -n "__fish_sprocket_using_subcommand format" -l no-color -d 'Disables color output'
complete -c sprocket -n "__fish_sprocket_using_subcommand format" -l with-tabs -d 'Use tabs for indentation (default is spaces)'
complete -c sprocket -n "__fish_sprocket_using_subcommand format" -l overwrite -d 'Overwrite the WDL documents with the formatted versions'
complete -c sprocket -n "__fish_sprocket_using_subcommand format" -l check -d 'Check if files are formatted correctly and print diff if not'
complete -c sprocket -n "__fish_sprocket_using_subcommand format" -s v -l verbose -d 'Increase logging verbosity'
complete -c sprocket -n "__fish_sprocket_using_subcommand format" -s q -l quiet -d 'Decrease logging verbosity'
complete -c sprocket -n "__fish_sprocket_using_subcommand format" -s h -l help -d 'Print help (see more with \'--help\')'
complete -c sprocket -n "__fish_sprocket_using_subcommand format" -s V -l version -d 'Print version'
complete -c sprocket -n "__fish_sprocket_using_subcommand inputs" -s n -l name -d 'The name of the task or workflow for which to generate inputs' -r
complete -c sprocket -n "__fish_sprocket_using_subcommand inputs" -l show-expressions -d 'Show inputs with non-literal default values'
complete -c sprocket -n "__fish_sprocket_using_subcommand inputs" -l hide-defaults -d 'Hide inputs with default values'
complete -c sprocket -n "__fish_sprocket_using_subcommand inputs" -l nested-inputs -d 'Generate inputs for all tasks called in the workflow'
complete -c sprocket -n "__fish_sprocket_using_subcommand inputs" -l yaml -d 'Output the template as a YAML file'
complete -c sprocket -n "__fish_sprocket_using_subcommand inputs" -s v -l verbose -d 'Increase logging verbosity'
complete -c sprocket -n "__fish_sprocket_using_subcommand inputs" -s q -l quiet -d 'Decrease logging verbosity'
complete -c sprocket -n "__fish_sprocket_using_subcommand inputs" -s h -l help -d 'Print help'
complete -c sprocket -n "__fish_sprocket_using_subcommand inputs" -s V -l version -d 'Print version'
complete -c sprocket -n "__fish_sprocket_using_subcommand lint" -s e -l except -d 'Excepts (ignores) an analysis or lint rule' -r -f -a "CallInputSpacing\t''
CommandSectionIndentation\t''
CommentWhitespace\t''
ConciseInput\t''
ConsistentNewlines\t''
ContainerUri\t''
DeclarationName\t''
DeprecatedObject\t''
DeprecatedPlaceholder\t''
DoubleQuotes\t''
ElementSpacing\t''
EndingNewline\t''
ExpectedRuntimeKeys\t''
ExpressionSpacing\t''
HereDocCommands\t''
ImportPlacement\t''
ImportSorted\t''
ImportWhitespace\t''
InputName\t''
InputSorted\t''
KnownRules\t''
LineWidth\t''
LintDirectiveFormatted\t''
LintDirectiveValid\t''
MatchingOutputMeta\t''
MetaDescription\t''
MetaKeyValueFormatting\t''
MetaSections\t''
OutputName\t''
OutputSection\t''
ParameterMetaMatched\t''
PascalCase\t''
PreambleCommentPlacement\t''
PreambleFormatted\t''
RedundantNone\t''
RequirementsSection\t''
RuntimeSection\t''
SectionOrdering\t''
ShellCheck\t''
SnakeCase\t''
TodoComment\t''
TrailingComma\t''
UnnecessaryFunctionCall\t''
UnusedCall\t''
UnusedDeclaration\t''
UnusedImport\t''
UnusedInput\t''
VersionStatementFormatted\t''
Whitespace\t''"
complete -c sprocket -n "__fish_sprocket_using_subcommand lint" -s m -l report-mode -d 'The report mode' -r -f -a "full\t'Prints diagnostics as multiple lines'
one-line\t'Prints diagnostics as one line'"
complete -c sprocket -n "__fish_sprocket_using_subcommand lint" -l deny-warnings -d 'Causes the command to fail if warnings were reported'
complete -c sprocket -n "__fish_sprocket_using_subcommand lint" -l deny-notes -d 'Causes the command to fail if notes were reported'
complete -c sprocket -n "__fish_sprocket_using_subcommand lint" -l suppress-imports -d 'Suppress diagnostics from documents that were not explicitly provided in the sources list (i.e., were imported from a provided source)'
complete -c sprocket -n "__fish_sprocket_using_subcommand lint" -l show-remote-diagnostics -d 'Show diagnostics for remote documents'
complete -c sprocket -n "__fish_sprocket_using_subcommand lint" -l hide-notes -d 'Hide diagnostics with `note` severity'
complete -c sprocket -n "__fish_sprocket_using_subcommand lint" -l no-color -d 'Disables color output'
complete -c sprocket -n "__fish_sprocket_using_subcommand lint" -s v -l verbose -d 'Increase logging verbosity'
complete -c sprocket -n "__fish_sprocket_using_subcommand lint" -s q -l quiet -d 'Decrease logging verbosity'
complete -c sprocket -n "__fish_sprocket_using_subcommand lint" -s h -l help -d 'Print help (see more with \'--help\')'
complete -c sprocket -n "__fish_sprocket_using_subcommand lint" -s V -l version -d 'Print version'
complete -c sprocket -n "__fish_sprocket_using_subcommand run" -s n -l name -d 'The name of the task or workflow to run' -r
complete -c sprocket -n "__fish_sprocket_using_subcommand run" -s o -l output -d 'The execution output directory; defaults to the task name if provided, otherwise, `output`' -r -F
complete -c sprocket -n "__fish_sprocket_using_subcommand run" -s m -l report-mode -d 'The report mode' -r -f -a "full\t'Prints diagnostics as multiple lines'
one-line\t'Prints diagnostics as one line'"
complete -c sprocket -n "__fish_sprocket_using_subcommand run" -l overwrite -d 'Overwrites the execution output directory if it exists'
complete -c sprocket -n "__fish_sprocket_using_subcommand run" -l no-color -d 'Disables color output'
complete -c sprocket -n "__fish_sprocket_using_subcommand run" -s v -l verbose -d 'Increase logging verbosity'
complete -c sprocket -n "__fish_sprocket_using_subcommand run" -s q -l quiet -d 'Decrease logging verbosity'
complete -c sprocket -n "__fish_sprocket_using_subcommand run" -s h -l help -d 'Print help (see more with \'--help\')'
complete -c sprocket -n "__fish_sprocket_using_subcommand validate" -s n -l name -d 'The name of the task or workflow to validate inputs against' -r
complete -c sprocket -n "__fish_sprocket_using_subcommand validate" -s m -l report-mode -d 'The report mode' -r -f -a "full\t'Prints diagnostics as multiple lines'
one-line\t'Prints diagnostics as one line'"
complete -c sprocket -n "__fish_sprocket_using_subcommand validate" -l no-color -d 'Disables color output'
complete -c sprocket -n "__fish_sprocket_using_subcommand validate" -s v -l verbose -d 'Increase logging verbosity'
complete -c sprocket -n "__fish_sprocket_using_subcommand validate" -s q -l quiet -d 'Decrease logging verbosity'
complete -c sprocket -n "__fish_sprocket_using_subcommand validate" -s h -l help -d 'Print help (see more with \'--help\')'
complete -c sprocket -n "__fish_sprocket_using_subcommand validate" -s V -l version -d 'Print version'
complete -c sprocket -n "__fish_sprocket_using_subcommand help; and not __fish_seen_subcommand_from analyzer check completions config explain format inputs lint run validate help" -f -a "analyzer" -d 'Runs the Language Server Protocol (LSP) server'
complete -c sprocket -n "__fish_sprocket_using_subcommand help; and not __fish_seen_subcommand_from analyzer check completions config explain format inputs lint run validate help" -f -a "check" -d 'Checks a document or a directory containing documents'
complete -c sprocket -n "__fish_sprocket_using_subcommand help; and not __fish_seen_subcommand_from analyzer check completions config explain format inputs lint run validate help" -f -a "completions" -d 'Generates shell completions'
complete -c sprocket -n "__fish_sprocket_using_subcommand help; and not __fish_seen_subcommand_from analyzer check completions config explain format inputs lint run validate help" -f -a "config" -d 'Display the effective configuration'
complete -c sprocket -n "__fish_sprocket_using_subcommand help; and not __fish_seen_subcommand_from analyzer check completions config explain format inputs lint run validate help" -f -a "explain" -d 'Explains linting and validation rules'
complete -c sprocket -n "__fish_sprocket_using_subcommand help; and not __fish_seen_subcommand_from analyzer check completions config explain format inputs lint run validate help" -f -a "format" -d 'Formats a document or a directory containing documents'
complete -c sprocket -n "__fish_sprocket_using_subcommand help; and not __fish_seen_subcommand_from analyzer check completions config explain format inputs lint run validate help" -f -a "inputs" -d 'Writes the inputs schema for a WDL document'
complete -c sprocket -n "__fish_sprocket_using_subcommand help; and not __fish_seen_subcommand_from analyzer check completions config explain format inputs lint run validate help" -f -a "lint" -d 'Lints a document or a directory containing documents'
complete -c sprocket -n "__fish_sprocket_using_subcommand help; and not __fish_seen_subcommand_from analyzer check completions config explain format inputs lint run validate help" -f -a "run" -d 'Runs a task or workflow'
complete -c sprocket -n "__fish_sprocket_using_subcommand help; and not __fish_seen_subcommand_from analyzer check completions config explain format inputs lint run validate help" -f -a "validate" -d 'Validate a set of inputs against a task or workflow'
complete -c sprocket -n "__fish_sprocket_using_subcommand help; and not __fish_seen_subcommand_from analyzer check completions config explain format inputs lint run validate help" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
complete -c sprocket -n "__fish_sprocket_using_subcommand help; and __fish_seen_subcommand_from config" -f -a "init" -d 'Generates a default configuration file'
complete -c sprocket -n "__fish_sprocket_using_subcommand help; and __fish_seen_subcommand_from config" -f -a "resolve" -d 'Displays the current configuration'
